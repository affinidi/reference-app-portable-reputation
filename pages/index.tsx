import { GetServerSideProps } from "next";
import { getProviders, signIn, useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { FC } from "react";

// import { authOptions } from "./api/auth/[...nextauth]";

// const redirectUrl = `${
//   process.env.NEXT_PUBLIC_HOST || "http://localhost:3000"
// }/github`;

const Home: FC<SignInProps> = ({ providers }) => {
  const { status } = useSession();
  const router = useRouter();
  if (status === "authenticated") {
    router.push("/github");
    return;
  }

  if (status === "loading") {
    return (
      <div className="flex justify-center items-center h-[100vh]">
        ... Loading
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Dveloper Reputation App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex items-center justify-center min-h-screen">
        <div className="flex gap-6 flex-col">
          <h1 className="text-xl">Connect with your github account</h1>
          <SignIn providers={providers} />
        </div>
      </main>
    </>
  );
};

export default Home;

type SignInProps = {
  providers: [{ id: string; name: string }];
};

function SignIn({ providers }: SignInProps) {
  return (
    <>
      {Object.values(providers).map((provider) => (
        <div key={provider.name}>
          <button
            className="flex break-inside bg-black text-white border-2 border-transparent rounded-3xl px-6 py-3 mb-4 w-full dark:bg-slate-800 dark:text-white"
            onClick={() => signIn(provider.id)}
          >
            <div className="m-auto">
              <div className="flex items-center justify-start flex-1 space-x-4">
                <svg width="25" height="25" viewBox="0 0 24 24">
                  <path
                    fill="currentColor"
                    d="M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"
                  />
                </svg>{" "}
                <span className="font-medium">
                  Sign in with {provider.name}
                </span>
              </div>
            </div>
          </button>
        </div>
      ))}
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  // const session = await unstable_getServerSession(
  //   context.req,
  //   context.res,
  //   authOptions
  // );

  // console.log("session:", session);
  // if (session) {
  //   return {
  //     redirect: {
  //       destination: "/github",
  //       permanent: false,
  //     },
  //   };
  // }
  const providers = await getProviders();
  return {
    props: { providers },
  };
};
